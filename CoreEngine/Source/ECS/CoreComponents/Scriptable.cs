using System;

using MoonSharp.Interpreter;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Input;

using CoreEngine.Lua;

namespace CoreEngine.ECS
{
	// The goal is to use Lua scripting for all gameplay and interactive elements
	// The scripts should be: 
	// * files from a hard drive, 
	// * files from the network network via IPFS or HTTP GET 
	// * procedurally generated by a user / AI from within the app.
	public class Scriptable : Component
    {
		public LuaScript LuaScript;

        public Scriptable(string script)
        {
			LuaScript = new LuaScript();
			LuaScript.Script.DoString(script);
        }

		public override void Initialize(Entity entity)
		{
			base.Initialize(entity);

			LuaEnvManagement.AddAPI_ECS(LuaScript.Script, entity);

			// register Lua functions
			LuaScript.FuncInitialize = LuaScript.Script.Globals.Get("_initialize");
			LuaScript.FuncUpdate = LuaScript.Script.Globals.Get("_update");

			// call Lua initialize
			if(LuaScript.FuncInitialize.IsNotNil())
				LuaScript.Script.Call(LuaScript.FuncInitialize);
		}

		public override void Update(float dt)
		{
			LuaScript.Script.Globals["dt"] = dt;

			// call Lua update
			if(LuaScript.FuncUpdate.IsNotNil())
				LuaScript.Script.Call(LuaScript.FuncUpdate);

			base.Update(dt);
		}
	}
}